// Code generated by MockGen. DO NOT EDIT.
// Source: http/api/subscribe.go

// Package mock_api is a generated GoMock package.
package mock_api

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserSubscriber is a mock of UserSubscriber interface.
type MockUserSubscriber struct {
	ctrl     *gomock.Controller
	recorder *MockUserSubscriberMockRecorder
}

// MockUserSubscriberMockRecorder is the mock recorder for MockUserSubscriber.
type MockUserSubscriberMockRecorder struct {
	mock *MockUserSubscriber
}

// NewMockUserSubscriber creates a new mock instance.
func NewMockUserSubscriber(ctrl *gomock.Controller) *MockUserSubscriber {
	mock := &MockUserSubscriber{ctrl: ctrl}
	mock.recorder = &MockUserSubscriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserSubscriber) EXPECT() *MockUserSubscriberMockRecorder {
	return m.recorder
}

// SubscribeUser mocks base method.
func (m *MockUserSubscriber) SubscribeUser(arg0 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubscribeUser", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SubscribeUser indicates an expected call of SubscribeUser.
func (mr *MockUserSubscriberMockRecorder) SubscribeUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubscribeUser", reflect.TypeOf((*MockUserSubscriber)(nil).SubscribeUser), arg0)
}

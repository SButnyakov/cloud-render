// Code generated by MockGen. DO NOT EDIT.
// Source: http/api/orders.go

// Package mock_api is a generated GoMock package.
package mock_api

import (
	dto "cloud-render/internal/dto"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockManyOrdersProvider is a mock of ManyOrdersProvider interface.
type MockManyOrdersProvider struct {
	ctrl     *gomock.Controller
	recorder *MockManyOrdersProviderMockRecorder
}

// MockManyOrdersProviderMockRecorder is the mock recorder for MockManyOrdersProvider.
type MockManyOrdersProviderMockRecorder struct {
	mock *MockManyOrdersProvider
}

// NewMockManyOrdersProvider creates a new mock instance.
func NewMockManyOrdersProvider(ctrl *gomock.Controller) *MockManyOrdersProvider {
	mock := &MockManyOrdersProvider{ctrl: ctrl}
	mock.recorder = &MockManyOrdersProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockManyOrdersProvider) EXPECT() *MockManyOrdersProviderMockRecorder {
	return m.recorder
}

// GetManyOrders mocks base method.
func (m *MockManyOrdersProvider) GetManyOrders(id int64) ([]dto.GetOrderDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetManyOrders", id)
	ret0, _ := ret[0].([]dto.GetOrderDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetManyOrders indicates an expected call of GetManyOrders.
func (mr *MockManyOrdersProviderMockRecorder) GetManyOrders(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetManyOrders", reflect.TypeOf((*MockManyOrdersProvider)(nil).GetManyOrders), id)
}
